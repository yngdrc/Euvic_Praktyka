plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.euvic.praktyka_kheller"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion '1.5.10'
        kotlinCompilerExtensionVersion = "1.1.0-alpha02"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.21"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.16.1'
    implementation 'androidx.ui:ui-foundation:0.1.0-dev14'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.3.1'
    // implementation 'androidx.compose.compiler:compiler:1.1.0-alpha01'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    // -- Retrofit2
    def retrofit2_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    // -- Lifecycle Components (ViewModel, LiveData and ReactiveStreams)
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"

    // -- Coroutines
    def coroutines_version = "1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // RecyclerView
    def recyclerview_version = "1.2.1"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    def material_version = "1.5.0-alpha02"
    implementation "com.google.android.material:material:$material_version"

    // Leak Canary (detecting memory leaks)
    def leak_canary_version = "2.0"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // Jetpack
    def compose = "1.0.1"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:1.1.0-alpha02"
    implementation "androidx.compose.runtime:runtime-rxjava2:1.1.0-alpha02"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-core:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose"
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"
    implementation "io.coil-kt:coil-compose:1.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    def material = "1.5.0-alpha02"
    implementation "com.google.android.material:material:$material"

    def constraint_layout = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    def androidx_ui = "1.0.0-alpha07"
    implementation "androidx.ui:ui-tooling:$androidx_ui"

    def nav_version = "2.3.5"

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.4.0-alpha07")

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation "androidx.compose.runtime:runtime-rxjava2:1.1.0-alpha03"

    // RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

    def room_version = "2.3.0"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin Symbolic Processing (KSP)
    //ksp("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")

    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.4.0-alpha04")

    // Hilt
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
}

kapt {
    correctErrorTypes true
}